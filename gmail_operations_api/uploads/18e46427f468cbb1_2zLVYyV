Top stories for Adarsh

-----

Question: What is the salary of an entry level scientist at BARC?


Answer from Pavnesh Kumar Singh (Jack Martin)


✦ BARC Salary Structure:

- Pay Matrix Level: 10

- Basic Pay: ₹56,100 - ₹1,77,500

- DA: ₹6,732

- TA: ₹3,600 - ₹7,200

- HRA: ₹4,488 - ₹13,464

- PRIS: ₹3,366 - ₹5,610

 
Read More: https://www.quora.com/qemail/tc?al_imp=eyJ0eXBlIjogMzMsICJoYXNoIjogIjI3NzM4MjY2MjQ3MTQ0NTA3OXwxfDF8MTQ3Nzc0MzY4NDA2NjA1MSJ9&al_pri=8&aoid=o1VNdXEajx&aoty=1&aty=4&cp=1&et=2&id=98437c21ea5b44d78b713e603c8492f5&uid=zVpByawQDDu
-----
Question: Can Python replace PHP?


Answer from Zee Xiong


Short answer: no.

Long answer: nope.

How many applications do you think are written in PHP? How many man hours do you think will cost to replace those applications that  
Read More: https://www.quora.com/qemail/tc?al_imp=eyJ0eXBlIjogMzMsICJoYXNoIjogIjI3NzM4MjY2MjQ3MTQ0NTA3OXwyfDF8MjAxMDkwNzI1In0%3D&al_pri=8&aoid=q1UrUew5q88&aoty=1&aty=4&cp=2&et=2&id=98437c21ea5b44d78b713e603c8492f5&uid=zVpByawQDDu
-----
Question: How do you feel about Meghan Markle's experiences of being targeted with "bullying and abuse" on social media while pregnant with Archie and Lilibet?


Answer from Sarah Williams


What bullying and abuse did she receive? Indeed, it’s unlikely that she was even pregnant on the basis that she’s had a hysterectomy. That women continues to spew lies and 
Read More: https://www.quora.com/qemail/tc?al_imp=eyJ0eXBlIjogMzMsICJoYXNoIjogIjI3NzM4MjY2MjQ3MTQ0NTA3OXwzfDF8MTQ3Nzc0Mzc0NTI2NjY3NyJ9&al_pri=8&aoid=VFB8GDdnoRU&aoty=1&aty=4&cp=3&et=2&id=98437c21ea5b44d78b713e603c8492f5&uid=zVpByawQDDu
-----
Question: If I invest 1000 per month in SIP for 20 years, how much will I return after 20 years? For this amount, which fund is best for me?


Answer from Sanjeev Bhatt


If you Invest in SBI Small Cap Mutual Fund thru SIP of Rs 1000 per month for 20 Years or 240 months then your Expected Fund value at the end of the 20 th Year would be Rs  
Read More: https://www.quora.com/qemail/tc?al_imp=eyJ0eXBlIjogMzMsICJoYXNoIjogIjI3NzM4MjY2MjQ3MTQ0NTA3OXw0fDF8MTQ3Nzc0MzcwMzI2NjQ1MSJ9&al_pri=8&aoid=1f5jnUZNNv7&aoty=1&aty=4&cp=4&et=2&id=98437c21ea5b44d78b713e603c8492f5&uid=zVpByawQDDu
-----
Question: What is your SSC CGL 2018 Prelims and Mains combined scorecard?


Answer from Vivek Singh ( विवेक सिंह )


Pre :- 178.32

Mains ( 13 September)

Quant :- 132.04 ( i knew i screwed up here)

English:- 180.38

Total combined score of tier 1+ tier 2 is 490.74

Fingers crossed and  
Read More: https://www.quora.com/qemail/tc?al_imp=eyJ0eXBlIjogMzMsICJoYXNoIjogIjI3NzM4MjY2MjQ3MTQ0NTA3OXw1fDF8MTc3NzMyOTc3In0%3D&al_pri=8&aoid=MucWGRWChs7&aoty=1&aty=4&cp=5&et=2&id=98437c21ea5b44d78b713e603c8492f5&uid=zVpByawQDDu
-----
Question: As a veteran, how can anyone possibly support Trump?


Answer from Jay Howell


Wow…you’re obviously not a veteran, otherwise you wouldn’t have asked such a blatantly stupid question! I could go on for hours how, as a veteran, I won’t support anyone O 
Read More: https://www.quora.com/qemail/tc?al_imp=eyJ0eXBlIjogMzMsICJoYXNoIjogIjI3NzM4MjY2MjQ3MTQ0NTA3OXw2fDF8MTQ3Nzc0Mzc0NDI4MzQ1MCJ9&al_pri=8&aoid=zXalBTTDvaT&aoty=1&aty=4&cp=6&et=2&id=98437c21ea5b44d78b713e603c8492f5&uid=zVpByawQDDu
-----
Question: What is the strangest public service in the entire oriental world?


Asked in Extremely interesting facts, Answer from Alessandro13


In Chinese cities there is a service called Jam Busting.

This allows drivers who get stuck in traffic and need to get somewhere quickly to schedule a service to be picked 
Read More: https://www.quora.com/qemail/tc?al_imp=eyJ0eXBlIjogMzMsICJoYXNoIjogIjI3NzM4MjY2MjQ3MTQ0NTA3OXw3fDF8MTQ3Nzc0Mzc0MzI3MTc4MCJ9&al_pri=8&aoid=aHpZPVHRx97&aoty=1&aty=4&cp=7&et=2&id=98437c21ea5b44d78b713e603c8492f5&uid=zVpByawQDDu
-----
Question: Does YouTube Algos automatically “push” your videos to others if they are getting good watch time?


Answer from Geoffrey Verity Schofield


No.

My watch time is excellent, most videos are 35–50% and 4–6 minutes on average, sometimes 7–10 minutes for longer videos. I’ve confirmed with some other fitness conten 
Read More: https://www.quora.com/qemail/tc?al_imp=eyJ0eXBlIjogMzMsICJoYXNoIjogIjI3NzM4MjY2MjQ3MTQ0NTA3OXw4fDF8MjYxNjY4MzgwIn0%3D&al_pri=8&aoid=jeADpjLivZP&aoty=1&aty=4&cp=8&et=2&id=98437c21ea5b44d78b713e603c8492f5&uid=zVpByawQDDu
-----
Question: How long do scammers typically continue to contact victims after their initial plan fails?


Answer from Pamela


Of the 68 scammers that I chatted with as part of my study, there were 11 who returned after their request for money was refused.

Three of these scammers contacted me to  
Read More: https://www.quora.com/qemail/tc?al_imp=eyJ0eXBlIjogMzMsICJoYXNoIjogIjI3NzM4MjY2MjQ3MTQ0NTA3OXw5fDF8MTQ3Nzc0Mzc0MzY1NDM4NCJ9&al_pri=8&aoid=mWjrAfclWrH&aoty=1&aty=4&cp=9&et=2&id=98437c21ea5b44d78b713e603c8492f5&uid=zVpByawQDDu
-----
Question: Someone stole money from me and I only have his phone number and name. How can I track him with this?


Asked in INFORMATICSOLUTIONS.CO.UK.,, Answer from Chester Mollie


𝑩𝒆𝒇𝒐𝒓𝒆 𝒕𝒉𝒆 𝒆𝒓𝒂 𝒐𝒇 𝒔𝒐𝒄𝒊𝒂𝒍 𝒎𝒆𝒅𝒊𝒂 𝒐𝒓 𝒔𝒎𝒂𝒓𝒕𝒑𝒉𝒐𝒏𝒆𝒔, 𝒏𝒖𝒎𝒆𝒓𝒐𝒖𝒔 𝒄𝒉𝒆𝒂𝒕𝒊𝒏𝒈 𝒔𝒑𝒐𝒖𝒔𝒆𝒔 𝒘𝒆𝒓𝒆 𝒔𝒕𝒊𝒍𝒍 𝒅𝒊𝒔𝒄𝒐𝒗𝒆𝒓𝒆𝒅. 𝑶𝒇𝒕𝒆𝒏, 𝒊𝒕 𝒃𝒆𝒈𝒊𝒏𝒔 𝒘𝒊𝒕𝒉 𝒂𝒏 𝒊𝒏𝒕𝒖𝒊𝒕𝒊𝒗𝒆 𝒇𝒆𝒆𝒍𝒊𝒏𝒈. 𝒀𝒐𝒖 𝒃𝒆𝒈𝒊𝒏 𝒐𝒃𝒔𝒆𝒓𝒗𝒊𝒏𝒈 𝒑𝒂𝒓𝒕𝒊𝒄𝒖𝒍𝒂𝒓  
Read More: https://www.quora.com/qemail/tc?al_imp=eyJ0eXBlIjogMzMsICJoYXNoIjogIjI3NzM4MjY2MjQ3MTQ0NTA3OXwxMHwxfDE0Nzc3NDM3NDY2MjY3OTQifQ%3D%3D&al_pri=8&aoid=m4SlIgyDkWu&aoty=1&aty=4&cp=10&et=2&id=98437c21ea5b44d78b713e603c8492f5&uid=zVpByawQDDu
-----
Question: If data science is in demand, why is it so hard to get a data scientist job?


Answer from Emil Filipov


Ideally, companies look for talented people to fill in their empty data scientist spots.

The misconception that most people don’t get around is that taking a course in da 
Read More: https://www.quora.com/qemail/tc?al_imp=eyJ0eXBlIjogMzMsICJoYXNoIjogIjI3NzM4MjY2MjQ3MTQ0NTA3OXwxMXwxfDE5MTY4NjIwNCJ9&al_pri=8&aoid=zqdBORD8wPF&aoty=1&aty=4&cp=11&et=2&id=98437c21ea5b44d78b713e603c8492f5&uid=zVpByawQDDu
-----
Question: Why don't more programmers use Haskell?


Answer from Niels Hoogeveen


I like many of the answers given, and wouldn’t want to dispute the validity of any of them.

I do want to add my two cents. If I understand correctly, one of the selling p 
Read More: https://www.quora.com/qemail/tc?al_imp=eyJ0eXBlIjogMzMsICJoYXNoIjogIjI3NzM4MjY2MjQ3MTQ0NTA3OXwxMnwxfDE0Nzc3NDM2Nzk0OTExMTMifQ%3D%3D&al_pri=8&aoid=3HQ4qIIOqmD&aoty=1&aty=4&cp=12&et=2&id=98437c21ea5b44d78b713e603c8492f5&uid=zVpByawQDDu
-----

-----

To control which emails we send you, visit: https://www.quora.com/qemail/tc?aoid&aoty=14&aty=4&cp=0&et=2&id=98437c21ea5b44d78b713e603c8492f5&uid=zVpByawQDDu

To unsubscribe from this type of email, visit: https://www.quora.com/email_optout/qemail_unsubscribe?email_track_id=98437c21ea5b44d78b713e603c8492f5&t=1710575745599930&token=cd76baedadbfa2631c425aa69b8fb04f151001b915780ab03f73799fb4e7287ef7d00a5a715a5f03940e66462fd324b13ccdf8ef189b0dd6f3ae12895c51c674&type=2&uid=2267693374